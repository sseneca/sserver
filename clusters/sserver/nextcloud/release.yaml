apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: nextcloud
  namespace: nextcloud
spec:
  interval: 5m
  releaseName: nextcloud
  chart:
    spec:
      chart: nextcloud
      version: 2.14.4
      sourceRef:
        name: nextcloud
        kind: HelmRepository
  valuesFrom:
    - kind: Secret
      name: nextcloud-secrets
  values:
    image:
      repository: nextcloud
      tag: 24.0.2-fpm-alpine
    ingress:
      enabled: true
      className: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        nginx.ingress.kubernetes.io/proxy-body-size: 4G
        nginx.ingress.kubernetes.io/server-snippet: |-
          location = /.well-known/carddav {
              return 301 https://$host/remote.php/dav;
          }

          location = /.well-known/caldav {
              return 301 https://$host/remote.php/dav;
          }

          location = /.well-known/webfinger {
              return 301 https://$host/index.php/.well-known/webfinger;
          }

          location = /.well-known/nodeinfo {
              return 301 https://$host/index.php/.well-known/nodeinfo;
          }
      tls:
        - hosts:
            - cloud.ssene.ca
          secretName: nextcloud-tls-cert
    phpClientHttpsFix:
      enabled: true
      protocol: https
    nextcloud:
      host: cloud.ssene.ca
      existingSecret:
        enabled: true
        secretName: nextcloud-admin
      extraVolumes:
        - name: photos
          persistentVolumeClaim:
            claimName: photos-nextcloud
            readOnly: false
      extraVolumeMounts:
        - name: photos
          mountPath: "/mnt/photos"
      extraEnv:
        - name: TRUSTED_PROXIES
          value: ingress-nginx-controller.kube-system.svc.cluster.local
        - name: OVERWRITEHOST
          value: cloud.ssene.ca
        - name: OVERWRITEPROTOCOL
          value: https
    nginx:
      enabled: true
      image:
        repository: nginx
        tag: 1.22.0-alpine
    internalDatabase:
      enabled: false
    externalDatabase:
      enabled: true
      type: postgresql
      host: nextcloud-postgresql.nextcloud.svc.cluster.local
      existingSecret:
        enabled: true
        database: nextcloud
        secretName: externaldatabase-secrets
    postgresql:
      enabled: true
      global:
        postgresql:
          auth:
            username: nextcloud
            database: nextcloud
            existingSecret: postgresql-secrets
      primary:
        persistence:
          enabled: true
          existingClaim: database-nextcloud
      image:
        repository: bitnami/postgresql
        tag: 13.1.0
      volumePermissions:
        enabled: true
      rbac:
        create: true
    redis:
      enabled: true
      auth:
        enabled: true
    persistence:
      enabled: true
      existingClaim: data-nextcloud
    livenessProbe:
      enabled: false
    readinessProbe:
      enabled: false
    startupProbe:
      enabled: true
    lifecycle:
      postStartCommand: ["/bin/sh", "-c", "crond"]
    metrics:
      enabled: true
      https: true
      image:
        repository: xperimental/nextcloud-exporter
        tag: 0.5.1
